Variable OMP_NUM_THREADS has been set to 12

Loading python/3.11.7-gcc-12.2.0
  Loading requirement: openssl/3.3.0-gcc-12.2.0 sqlite/3.43.2-gcc-12.2.0
Traceback (most recent call last):
  File "/data/home/qc25022/cancer-extraction-pipeline/main.py", line 32, in <module>
    map_and_save_events('config.yaml')
  File "/data/home/qc25022/cancer-extraction-pipeline/src/pipeline/step_03c_process_events.py", line 49, in map_and_save_events
    final_df = combined_events_lf.join(subjects_lf, on="subject_id", how="inner").collect()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/qc25022/CancEHR-Tokenisation/env/lib/python3.11/site-packages/polars/_utils/deprecation.py", line 93, in wrapper
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/qc25022/CancEHR-Tokenisation/env/lib/python3.11/site-packages/polars/lazyframe/frame.py", line 2206, in collect
    return wrap_df(ldf.collect(engine, callback))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
polars.exceptions.ColumnNotFoundError: 'rename' on column: 'final_code' is invalid

Schema at this point: Schema:
name: subject_id, field: Int64
name: time, field: Date
name: code, field: String
name: numeric_value, field: Float64
name: raw_code, field: String
name: codelist_mapped, field: String
name: icd10_mapped, field: String


Resolved plan until failure:

	---> FAILED HERE RESOLVING 'sink' <---
 WITH_COLUMNS:
 [col("codelist_mapped").coalesce([col("icd10_mapped")]).fill_null(["MEDICAL//NULL//".str.concat_horizontal([col("raw_code")])]).alias("code")] 
  LEFT JOIN:
  LEFT PLAN ON: [col("raw_code")]
    LEFT JOIN:
    LEFT PLAN ON: [col("raw_code")]
       WITH_COLUMNS:
       [col("code").str.extract(["//(.*)$"]).alias("raw_code")] 
        FILTER [(col("code")) != ("MEDS_BIRTH")]
        FROM
          Parquet SCAN [/data/scratch/qc25022/liver/intermediate_sorted/0.parquet, ... 626 other sources]
          PROJECT */4 COLUMNS
    RIGHT PLAN ON: [col("raw_code")]
      UNION
        PLAN 0:
          SELECT [col("code").alias("raw_code"), "LAB//".str.concat_horizontal([col("MedicalTerm"), "//", col("code")]).alias("codelist_mapped")]
          FROM
            FILTER col("MedicalTerm").is_in([Series])
            FROM
              FILTER [(col("code")) != ("")]
              FROM
                 WITH_COLUMNS:
                 [col("code").str.strip_chars([" '"[]"])] 
                  EXPLODE
                    SELECT [col("MedicalTerm"), col("medcodes").str.split([","]).alias("code")]
                    FROM
                      Csv SCAN [/data/home/qc25022/PancreaticCancer/OutputFiles/cleaned_code_lists.csv]
                      PROJECT */4 COLUMNS
        PLAN 1:
          SELECT [col("code").alias("raw_code"), "MEDICAL//".str.concat_horizontal([col("MedicalTerm"), "//", col("code")]).alias("codelist_mapped")]
          FROM
            FILTER col("MedicalTerm").is_in([Series]).not()
            FROM
              FILTER [(col("code")) != ("")]
              FROM
                 WITH_COLUMNS:
                 [col("code").str.strip_chars([" '"[]"])] 
                  EXPLODE
                    SELECT [col("MedicalTerm"), col("medcodes").str.split([","]).alias("code")]
                    FROM
                      Csv SCAN [/data/home/qc25022/PancreaticCancer/OutputFiles/cleaned_code_lists.csv]
                      PROJECT */4 COLUMNS
      END UNION
    END LEFT JOIN
  RIGHT PLAN ON: [col("raw_code")]
    SELECT [col("raw_code"), "MEDICAL//".str.concat_horizontal([col("mapTarget"), "//", col("raw_code")]).alias("icd10_mapped")]
    FROM
      INNER JOIN:
      LEFT PLAN ON: [col("SnomedCTConceptId")]
        UNIQUE[maintain_order: false, keep_strategy: First] BY Some(["raw_code"])
          FILTER col("raw_code").is_not_null()
          FROM
            FILTER col("SnomedCTConceptId").is_not_null()
            FROM
              SELECT [col("MedCodeId").strict_cast(String).alias("raw_code"), col("SnomedCTConceptId").strict_cast(String)]
              FROM
                Csv SCAN [/data/home/qc25022/PancreaticCancer/OutputFiles/MedicalDict.csv]
                PROJECT */9 COLUMNS
      RIGHT PLAN ON: [col("SnomedCTConceptId")]
        SELECT [col("referencedComponentId").strict_cast(String).alias("SnomedCTConceptId"), col("mapTarget")]
        FROM
          UNIQUE[maintain_order: false, keep_strategy: First] BY Some(["referencedComponentId"])
            SORT BY [col("mapGroup"), col("mapPriority")]
              FILTER [(col("active")) == (1)]
              FROM
                Csv SCAN [/data/home/qc25022/cancer-extraction-pipeline/snomed_to_ICD.txt]
                PROJECT */13 COLUMNS
      END INNER JOIN
  END LEFT JOIN
